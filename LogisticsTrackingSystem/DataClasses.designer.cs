#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogisticsTrackingSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LogisticsDB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertvehicle(vehicle instance);
    partial void Updatevehicle(vehicle instance);
    partial void Deletevehicle(vehicle instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertlocation(location instance);
    partial void Updatelocation(location instance);
    partial void Deletelocation(location instance);
    partial void Insertparcel_log(parcel_log instance);
    partial void Updateparcel_log(parcel_log instance);
    partial void Deleteparcel_log(parcel_log instance);
    partial void Insertparcel_route(parcel_route instance);
    partial void Updateparcel_route(parcel_route instance);
    partial void Deleteparcel_route(parcel_route instance);
    partial void Insertparcel(parcel instance);
    partial void Updateparcel(parcel instance);
    partial void Deleteparcel(parcel instance);
    partial void Insertroute(route instance);
    partial void Updateroute(route instance);
    partial void Deleteroute(route instance);
    #endregion
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<vehicle> vehicles
		{
			get
			{
				return this.GetTable<vehicle>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<location> locations
		{
			get
			{
				return this.GetTable<location>();
			}
		}
		
		public System.Data.Linq.Table<parcel_log> parcel_logs
		{
			get
			{
				return this.GetTable<parcel_log>();
			}
		}
		
		public System.Data.Linq.Table<parcel_route> parcel_routes
		{
			get
			{
				return this.GetTable<parcel_route>();
			}
		}
		
		public System.Data.Linq.Table<parcel> parcels
		{
			get
			{
				return this.GetTable<parcel>();
			}
		}
		
		public System.Data.Linq.Table<route> routes
		{
			get
			{
				return this.GetTable<route>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customers")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private EntitySet<parcel> _parcels;
		
		private EntitySet<parcel> _parcels1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public customer()
		{
			this._parcels = new EntitySet<parcel>(new Action<parcel>(this.attach_parcels), new Action<parcel>(this.detach_parcels));
			this._parcels1 = new EntitySet<parcel>(new Action<parcel>(this.attach_parcels1), new Action<parcel>(this.detach_parcels1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_parcel", Storage="_parcels", ThisKey="id", OtherKey="receiver_id")]
		public EntitySet<parcel> parcels
		{
			get
			{
				return this._parcels;
			}
			set
			{
				this._parcels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_parcel1", Storage="_parcels1", ThisKey="id", OtherKey="sender_id")]
		public EntitySet<parcel> parcels1
		{
			get
			{
				return this._parcels1;
			}
			set
			{
				this._parcels1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_parcels(parcel entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_parcels(parcel entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
		
		private void attach_parcels1(parcel entity)
		{
			this.SendPropertyChanging();
			entity.customer1 = this;
		}
		
		private void detach_parcels1(parcel entity)
		{
			this.SendPropertyChanging();
			entity.customer1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehicles")]
	public partial class vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _capacity;
		
		private string _license_plate;
		
		private string _status;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private System.Nullable<int> _driver_id;
		
		private EntitySet<route> _routes;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncapacityChanging(int value);
    partial void OncapacityChanged();
    partial void Onlicense_plateChanging(string value);
    partial void Onlicense_plateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Ondriver_idChanging(System.Nullable<int> value);
    partial void Ondriver_idChanged();
    #endregion
		
		public vehicle()
		{
			this._routes = new EntitySet<route>(new Action<route>(this.attach_routes), new Action<route>(this.detach_routes));
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacity", DbType="Int NOT NULL")]
		public int capacity
		{
			get
			{
				return this._capacity;
			}
			set
			{
				if ((this._capacity != value))
				{
					this.OncapacityChanging(value);
					this.SendPropertyChanging();
					this._capacity = value;
					this.SendPropertyChanged("capacity");
					this.OncapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_license_plate", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string license_plate
		{
			get
			{
				return this._license_plate;
			}
			set
			{
				if ((this._license_plate != value))
				{
					this.Onlicense_plateChanging(value);
					this.SendPropertyChanging();
					this._license_plate = value;
					this.SendPropertyChanged("license_plate");
					this.Onlicense_plateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driver_id", DbType="Int")]
		public System.Nullable<int> driver_id
		{
			get
			{
				return this._driver_id;
			}
			set
			{
				if ((this._driver_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondriver_idChanging(value);
					this.SendPropertyChanging();
					this._driver_id = value;
					this.SendPropertyChanged("driver_id");
					this.Ondriver_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_route", Storage="_routes", ThisKey="id", OtherKey="vehicle_id")]
		public EntitySet<route> routes
		{
			get
			{
				return this._routes;
			}
			set
			{
				this._routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_vehicle", Storage="_employee", ThisKey="driver_id", OtherKey="id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.vehicles.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.vehicles.Add(this);
						this._driver_id = value.id;
					}
					else
					{
						this._driver_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_routes(route entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = this;
		}
		
		private void detach_routes(route entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employees")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _password;
		
		private string _phone;
		
		private string _role;
		
		private EntitySet<vehicle> _vehicles;
		
		private EntitySet<parcel_log> _parcel_logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    #endregion
		
		public employee()
		{
			this._vehicles = new EntitySet<vehicle>(new Action<vehicle>(this.attach_vehicles), new Action<vehicle>(this.detach_vehicles));
			this._parcel_logs = new EntitySet<parcel_log>(new Action<parcel_log>(this.attach_parcel_logs), new Action<parcel_log>(this.detach_parcel_logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_vehicle", Storage="_vehicles", ThisKey="id", OtherKey="driver_id")]
		public EntitySet<vehicle> vehicles
		{
			get
			{
				return this._vehicles;
			}
			set
			{
				this._vehicles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_parcel_log", Storage="_parcel_logs", ThisKey="id", OtherKey="employee_id")]
		public EntitySet<parcel_log> parcel_logs
		{
			get
			{
				return this._parcel_logs;
			}
			set
			{
				this._parcel_logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vehicles(vehicle entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_vehicles(vehicle entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
		
		private void attach_parcel_logs(parcel_log entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_parcel_logs(parcel_log entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.locations")]
	public partial class location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _contact;
		
		private string _address;
		
		private string _type;
		
		private EntitySet<parcel_log> _parcel_logs;
		
		private EntitySet<parcel> _parcels;
		
		private EntitySet<parcel> _parcels1;
		
		private EntitySet<route> _routes;
		
		private EntitySet<route> _routes1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public location()
		{
			this._parcel_logs = new EntitySet<parcel_log>(new Action<parcel_log>(this.attach_parcel_logs), new Action<parcel_log>(this.detach_parcel_logs));
			this._parcels = new EntitySet<parcel>(new Action<parcel>(this.attach_parcels), new Action<parcel>(this.detach_parcels));
			this._parcels1 = new EntitySet<parcel>(new Action<parcel>(this.attach_parcels1), new Action<parcel>(this.detach_parcels1));
			this._routes = new EntitySet<route>(new Action<route>(this.attach_routes), new Action<route>(this.detach_routes));
			this._routes1 = new EntitySet<route>(new Action<route>(this.attach_routes1), new Action<route>(this.detach_routes1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(255)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_parcel_log", Storage="_parcel_logs", ThisKey="id", OtherKey="location_id")]
		public EntitySet<parcel_log> parcel_logs
		{
			get
			{
				return this._parcel_logs;
			}
			set
			{
				this._parcel_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_parcel", Storage="_parcels", ThisKey="id", OtherKey="destination_id")]
		public EntitySet<parcel> parcels
		{
			get
			{
				return this._parcels;
			}
			set
			{
				this._parcels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_parcel1", Storage="_parcels1", ThisKey="id", OtherKey="origin_id")]
		public EntitySet<parcel> parcels1
		{
			get
			{
				return this._parcels1;
			}
			set
			{
				this._parcels1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_route", Storage="_routes", ThisKey="id", OtherKey="destination_id")]
		public EntitySet<route> routes
		{
			get
			{
				return this._routes;
			}
			set
			{
				this._routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_route1", Storage="_routes1", ThisKey="id", OtherKey="origin_id")]
		public EntitySet<route> routes1
		{
			get
			{
				return this._routes1;
			}
			set
			{
				this._routes1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_parcel_logs(parcel_log entity)
		{
			this.SendPropertyChanging();
			entity.location = this;
		}
		
		private void detach_parcel_logs(parcel_log entity)
		{
			this.SendPropertyChanging();
			entity.location = null;
		}
		
		private void attach_parcels(parcel entity)
		{
			this.SendPropertyChanging();
			entity.location = this;
		}
		
		private void detach_parcels(parcel entity)
		{
			this.SendPropertyChanging();
			entity.location = null;
		}
		
		private void attach_parcels1(parcel entity)
		{
			this.SendPropertyChanging();
			entity.location1 = this;
		}
		
		private void detach_parcels1(parcel entity)
		{
			this.SendPropertyChanging();
			entity.location1 = null;
		}
		
		private void attach_routes(route entity)
		{
			this.SendPropertyChanging();
			entity.location = this;
		}
		
		private void detach_routes(route entity)
		{
			this.SendPropertyChanging();
			entity.location = null;
		}
		
		private void attach_routes1(route entity)
		{
			this.SendPropertyChanging();
			entity.location1 = this;
		}
		
		private void detach_routes1(route entity)
		{
			this.SendPropertyChanging();
			entity.location1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.parcel_logs")]
	public partial class parcel_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _status;
		
		private string _note;
		
		private System.Nullable<System.DateTime> _timestamp;
		
		private string _parcel_id;
		
		private System.Nullable<int> _employee_id;
		
		private System.Nullable<int> _location_id;
		
		private System.Nullable<int> _route_id;
		
		private EntityRef<employee> _employee;
		
		private EntityRef<location> _location;
		
		private EntityRef<parcel> _parcel;
		
		private EntityRef<route> _route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OntimestampChanging(System.Nullable<System.DateTime> value);
    partial void OntimestampChanged();
    partial void Onparcel_idChanging(string value);
    partial void Onparcel_idChanged();
    partial void Onemployee_idChanging(System.Nullable<int> value);
    partial void Onemployee_idChanged();
    partial void Onlocation_idChanging(System.Nullable<int> value);
    partial void Onlocation_idChanged();
    partial void Onroute_idChanging(System.Nullable<int> value);
    partial void Onroute_idChanged();
    #endregion
		
		public parcel_log()
		{
			this._employee = default(EntityRef<employee>);
			this._location = default(EntityRef<location>);
			this._parcel = default(EntityRef<parcel>);
			this._route = default(EntityRef<route>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="VarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parcel_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string parcel_id
		{
			get
			{
				return this._parcel_id;
			}
			set
			{
				if ((this._parcel_id != value))
				{
					if (this._parcel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparcel_idChanging(value);
					this.SendPropertyChanging();
					this._parcel_id = value;
					this.SendPropertyChanged("parcel_id");
					this.Onparcel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int")]
		public System.Nullable<int> employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int")]
		public System.Nullable<int> location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_route_id", DbType="Int")]
		public System.Nullable<int> route_id
		{
			get
			{
				return this._route_id;
			}
			set
			{
				if ((this._route_id != value))
				{
					if (this._route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onroute_idChanging(value);
					this.SendPropertyChanging();
					this._route_id = value;
					this.SendPropertyChanged("route_id");
					this.Onroute_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_parcel_log", Storage="_employee", ThisKey="employee_id", OtherKey="id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.parcel_logs.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.parcel_logs.Add(this);
						this._employee_id = value.id;
					}
					else
					{
						this._employee_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_parcel_log", Storage="_location", ThisKey="location_id", OtherKey="id", IsForeignKey=true)]
		public location location
		{
			get
			{
				return this._location.Entity;
			}
			set
			{
				location previousValue = this._location.Entity;
				if (((previousValue != value) 
							|| (this._location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._location.Entity = null;
						previousValue.parcel_logs.Remove(this);
					}
					this._location.Entity = value;
					if ((value != null))
					{
						value.parcel_logs.Add(this);
						this._location_id = value.id;
					}
					else
					{
						this._location_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="parcel_parcel_log", Storage="_parcel", ThisKey="parcel_id", OtherKey="id", IsForeignKey=true)]
		public parcel parcel
		{
			get
			{
				return this._parcel.Entity;
			}
			set
			{
				parcel previousValue = this._parcel.Entity;
				if (((previousValue != value) 
							|| (this._parcel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._parcel.Entity = null;
						previousValue.parcel_logs.Remove(this);
					}
					this._parcel.Entity = value;
					if ((value != null))
					{
						value.parcel_logs.Add(this);
						this._parcel_id = value.id;
					}
					else
					{
						this._parcel_id = default(string);
					}
					this.SendPropertyChanged("parcel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="route_parcel_log", Storage="_route", ThisKey="route_id", OtherKey="id", IsForeignKey=true)]
		public route route
		{
			get
			{
				return this._route.Entity;
			}
			set
			{
				route previousValue = this._route.Entity;
				if (((previousValue != value) 
							|| (this._route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._route.Entity = null;
						previousValue.parcel_logs.Remove(this);
					}
					this._route.Entity = value;
					if ((value != null))
					{
						value.parcel_logs.Add(this);
						this._route_id = value.id;
					}
					else
					{
						this._route_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.parcel_routes")]
	public partial class parcel_route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _parcel_id;
		
		private int _route_id;
		
		private int _sequence;
		
		private EntityRef<parcel> _parcel;
		
		private EntityRef<route> _route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onparcel_idChanging(string value);
    partial void Onparcel_idChanged();
    partial void Onroute_idChanging(int value);
    partial void Onroute_idChanged();
    partial void OnsequenceChanging(int value);
    partial void OnsequenceChanged();
    #endregion
		
		public parcel_route()
		{
			this._parcel = default(EntityRef<parcel>);
			this._route = default(EntityRef<route>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parcel_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string parcel_id
		{
			get
			{
				return this._parcel_id;
			}
			set
			{
				if ((this._parcel_id != value))
				{
					if (this._parcel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onparcel_idChanging(value);
					this.SendPropertyChanging();
					this._parcel_id = value;
					this.SendPropertyChanged("parcel_id");
					this.Onparcel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_route_id", DbType="Int NOT NULL")]
		public int route_id
		{
			get
			{
				return this._route_id;
			}
			set
			{
				if ((this._route_id != value))
				{
					if (this._route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onroute_idChanging(value);
					this.SendPropertyChanging();
					this._route_id = value;
					this.SendPropertyChanged("route_id");
					this.Onroute_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sequence", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int sequence
		{
			get
			{
				return this._sequence;
			}
			set
			{
				if ((this._sequence != value))
				{
					this.OnsequenceChanging(value);
					this.SendPropertyChanging();
					this._sequence = value;
					this.SendPropertyChanged("sequence");
					this.OnsequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="parcel_parcel_route", Storage="_parcel", ThisKey="parcel_id", OtherKey="id", IsForeignKey=true)]
		public parcel parcel
		{
			get
			{
				return this._parcel.Entity;
			}
			set
			{
				parcel previousValue = this._parcel.Entity;
				if (((previousValue != value) 
							|| (this._parcel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._parcel.Entity = null;
						previousValue.parcel_routes.Remove(this);
					}
					this._parcel.Entity = value;
					if ((value != null))
					{
						value.parcel_routes.Add(this);
						this._parcel_id = value.id;
					}
					else
					{
						this._parcel_id = default(string);
					}
					this.SendPropertyChanged("parcel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="route_parcel_route", Storage="_route", ThisKey="route_id", OtherKey="id", IsForeignKey=true)]
		public route route
		{
			get
			{
				return this._route.Entity;
			}
			set
			{
				route previousValue = this._route.Entity;
				if (((previousValue != value) 
							|| (this._route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._route.Entity = null;
						previousValue.parcel_routes.Remove(this);
					}
					this._route.Entity = value;
					if ((value != null))
					{
						value.parcel_routes.Add(this);
						this._route_id = value.id;
					}
					else
					{
						this._route_id = default(int);
					}
					this.SendPropertyChanged("route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.parcels")]
	public partial class parcel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private decimal _weight;
		
		private string _type;
		
		private string _status;
		
		private System.Nullable<System.DateTime> _created_at;
		
		private int _sender_id;
		
		private int _receiver_id;
		
		private int _origin_id;
		
		private int _destination_id;
		
		private EntitySet<parcel_log> _parcel_logs;
		
		private EntitySet<parcel_route> _parcel_routes;
		
		private EntityRef<location> _location;
		
		private EntityRef<location> _location1;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<customer> _customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnweightChanging(decimal value);
    partial void OnweightChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Oncreated_atChanging(System.Nullable<System.DateTime> value);
    partial void Oncreated_atChanged();
    partial void Onsender_idChanging(int value);
    partial void Onsender_idChanged();
    partial void Onreceiver_idChanging(int value);
    partial void Onreceiver_idChanged();
    partial void Onorigin_idChanging(int value);
    partial void Onorigin_idChanged();
    partial void Ondestination_idChanging(int value);
    partial void Ondestination_idChanged();
    #endregion
		
		public parcel()
		{
			this._parcel_logs = new EntitySet<parcel_log>(new Action<parcel_log>(this.attach_parcel_logs), new Action<parcel_log>(this.detach_parcel_logs));
			this._parcel_routes = new EntitySet<parcel_route>(new Action<parcel_route>(this.attach_parcel_routes), new Action<parcel_route>(this.detach_parcel_routes));
			this._location = default(EntityRef<location>);
			this._location1 = default(EntityRef<location>);
			this._customer = default(EntityRef<customer>);
			this._customer1 = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal(10,2) NOT NULL")]
		public decimal weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_id", DbType="Int NOT NULL")]
		public int sender_id
		{
			get
			{
				return this._sender_id;
			}
			set
			{
				if ((this._sender_id != value))
				{
					if (this._customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsender_idChanging(value);
					this.SendPropertyChanging();
					this._sender_id = value;
					this.SendPropertyChanged("sender_id");
					this.Onsender_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiver_id", DbType="Int NOT NULL")]
		public int receiver_id
		{
			get
			{
				return this._receiver_id;
			}
			set
			{
				if ((this._receiver_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreceiver_idChanging(value);
					this.SendPropertyChanging();
					this._receiver_id = value;
					this.SendPropertyChanged("receiver_id");
					this.Onreceiver_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin_id", DbType="Int NOT NULL")]
		public int origin_id
		{
			get
			{
				return this._origin_id;
			}
			set
			{
				if ((this._origin_id != value))
				{
					if (this._location1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorigin_idChanging(value);
					this.SendPropertyChanging();
					this._origin_id = value;
					this.SendPropertyChanged("origin_id");
					this.Onorigin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destination_id", DbType="Int NOT NULL")]
		public int destination_id
		{
			get
			{
				return this._destination_id;
			}
			set
			{
				if ((this._destination_id != value))
				{
					if (this._location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondestination_idChanging(value);
					this.SendPropertyChanging();
					this._destination_id = value;
					this.SendPropertyChanged("destination_id");
					this.Ondestination_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="parcel_parcel_log", Storage="_parcel_logs", ThisKey="id", OtherKey="parcel_id")]
		public EntitySet<parcel_log> parcel_logs
		{
			get
			{
				return this._parcel_logs;
			}
			set
			{
				this._parcel_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="parcel_parcel_route", Storage="_parcel_routes", ThisKey="id", OtherKey="parcel_id")]
		public EntitySet<parcel_route> parcel_routes
		{
			get
			{
				return this._parcel_routes;
			}
			set
			{
				this._parcel_routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_parcel", Storage="_location", ThisKey="destination_id", OtherKey="id", IsForeignKey=true)]
		public location location
		{
			get
			{
				return this._location.Entity;
			}
			set
			{
				location previousValue = this._location.Entity;
				if (((previousValue != value) 
							|| (this._location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._location.Entity = null;
						previousValue.parcels.Remove(this);
					}
					this._location.Entity = value;
					if ((value != null))
					{
						value.parcels.Add(this);
						this._destination_id = value.id;
					}
					else
					{
						this._destination_id = default(int);
					}
					this.SendPropertyChanged("location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_parcel1", Storage="_location1", ThisKey="origin_id", OtherKey="id", IsForeignKey=true)]
		public location location1
		{
			get
			{
				return this._location1.Entity;
			}
			set
			{
				location previousValue = this._location1.Entity;
				if (((previousValue != value) 
							|| (this._location1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._location1.Entity = null;
						previousValue.parcels1.Remove(this);
					}
					this._location1.Entity = value;
					if ((value != null))
					{
						value.parcels1.Add(this);
						this._origin_id = value.id;
					}
					else
					{
						this._origin_id = default(int);
					}
					this.SendPropertyChanged("location1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_parcel", Storage="_customer", ThisKey="receiver_id", OtherKey="id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.parcels.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.parcels.Add(this);
						this._receiver_id = value.id;
					}
					else
					{
						this._receiver_id = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_parcel1", Storage="_customer1", ThisKey="sender_id", OtherKey="id", IsForeignKey=true)]
		public customer customer1
		{
			get
			{
				return this._customer1.Entity;
			}
			set
			{
				customer previousValue = this._customer1.Entity;
				if (((previousValue != value) 
							|| (this._customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer1.Entity = null;
						previousValue.parcels1.Remove(this);
					}
					this._customer1.Entity = value;
					if ((value != null))
					{
						value.parcels1.Add(this);
						this._sender_id = value.id;
					}
					else
					{
						this._sender_id = default(int);
					}
					this.SendPropertyChanged("customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_parcel_logs(parcel_log entity)
		{
			this.SendPropertyChanging();
			entity.parcel = this;
		}
		
		private void detach_parcel_logs(parcel_log entity)
		{
			this.SendPropertyChanging();
			entity.parcel = null;
		}
		
		private void attach_parcel_routes(parcel_route entity)
		{
			this.SendPropertyChanging();
			entity.parcel = this;
		}
		
		private void detach_parcel_routes(parcel_route entity)
		{
			this.SendPropertyChanging();
			entity.parcel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.routes")]
	public partial class route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _distance;
		
		private System.Nullable<int> _estimated_time;
		
		private System.Nullable<System.DateTime> _assigned_at;
		
		private string _status;
		
		private int _origin_id;
		
		private int _destination_id;
		
		private int _vehicle_id;
		
		private EntitySet<parcel_log> _parcel_logs;
		
		private EntitySet<parcel_route> _parcel_routes;
		
		private EntityRef<location> _location;
		
		private EntityRef<location> _location1;
		
		private EntityRef<vehicle> _vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndistanceChanging(System.Nullable<decimal> value);
    partial void OndistanceChanged();
    partial void Onestimated_timeChanging(System.Nullable<int> value);
    partial void Onestimated_timeChanged();
    partial void Onassigned_atChanging(System.Nullable<System.DateTime> value);
    partial void Onassigned_atChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onorigin_idChanging(int value);
    partial void Onorigin_idChanged();
    partial void Ondestination_idChanging(int value);
    partial void Ondestination_idChanged();
    partial void Onvehicle_idChanging(int value);
    partial void Onvehicle_idChanged();
    #endregion
		
		public route()
		{
			this._parcel_logs = new EntitySet<parcel_log>(new Action<parcel_log>(this.attach_parcel_logs), new Action<parcel_log>(this.detach_parcel_logs));
			this._parcel_routes = new EntitySet<parcel_route>(new Action<parcel_route>(this.attach_parcel_routes), new Action<parcel_route>(this.detach_parcel_routes));
			this._location = default(EntityRef<location>);
			this._location1 = default(EntityRef<location>);
			this._vehicle = default(EntityRef<vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_distance", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> distance
		{
			get
			{
				return this._distance;
			}
			set
			{
				if ((this._distance != value))
				{
					this.OndistanceChanging(value);
					this.SendPropertyChanging();
					this._distance = value;
					this.SendPropertyChanged("distance");
					this.OndistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estimated_time", DbType="Int")]
		public System.Nullable<int> estimated_time
		{
			get
			{
				return this._estimated_time;
			}
			set
			{
				if ((this._estimated_time != value))
				{
					this.Onestimated_timeChanging(value);
					this.SendPropertyChanging();
					this._estimated_time = value;
					this.SendPropertyChanged("estimated_time");
					this.Onestimated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assigned_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> assigned_at
		{
			get
			{
				return this._assigned_at;
			}
			set
			{
				if ((this._assigned_at != value))
				{
					this.Onassigned_atChanging(value);
					this.SendPropertyChanging();
					this._assigned_at = value;
					this.SendPropertyChanged("assigned_at");
					this.Onassigned_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin_id", DbType="Int NOT NULL")]
		public int origin_id
		{
			get
			{
				return this._origin_id;
			}
			set
			{
				if ((this._origin_id != value))
				{
					if (this._location1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorigin_idChanging(value);
					this.SendPropertyChanging();
					this._origin_id = value;
					this.SendPropertyChanged("origin_id");
					this.Onorigin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destination_id", DbType="Int NOT NULL")]
		public int destination_id
		{
			get
			{
				return this._destination_id;
			}
			set
			{
				if ((this._destination_id != value))
				{
					if (this._location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondestination_idChanging(value);
					this.SendPropertyChanging();
					this._destination_id = value;
					this.SendPropertyChanged("destination_id");
					this.Ondestination_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_id", DbType="Int NOT NULL")]
		public int vehicle_id
		{
			get
			{
				return this._vehicle_id;
			}
			set
			{
				if ((this._vehicle_id != value))
				{
					if (this._vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_idChanging(value);
					this.SendPropertyChanging();
					this._vehicle_id = value;
					this.SendPropertyChanged("vehicle_id");
					this.Onvehicle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="route_parcel_log", Storage="_parcel_logs", ThisKey="id", OtherKey="route_id")]
		public EntitySet<parcel_log> parcel_logs
		{
			get
			{
				return this._parcel_logs;
			}
			set
			{
				this._parcel_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="route_parcel_route", Storage="_parcel_routes", ThisKey="id", OtherKey="route_id")]
		public EntitySet<parcel_route> parcel_routes
		{
			get
			{
				return this._parcel_routes;
			}
			set
			{
				this._parcel_routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_route", Storage="_location", ThisKey="destination_id", OtherKey="id", IsForeignKey=true)]
		public location location
		{
			get
			{
				return this._location.Entity;
			}
			set
			{
				location previousValue = this._location.Entity;
				if (((previousValue != value) 
							|| (this._location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._location.Entity = null;
						previousValue.routes.Remove(this);
					}
					this._location.Entity = value;
					if ((value != null))
					{
						value.routes.Add(this);
						this._destination_id = value.id;
					}
					else
					{
						this._destination_id = default(int);
					}
					this.SendPropertyChanged("location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="location_route1", Storage="_location1", ThisKey="origin_id", OtherKey="id", IsForeignKey=true)]
		public location location1
		{
			get
			{
				return this._location1.Entity;
			}
			set
			{
				location previousValue = this._location1.Entity;
				if (((previousValue != value) 
							|| (this._location1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._location1.Entity = null;
						previousValue.routes1.Remove(this);
					}
					this._location1.Entity = value;
					if ((value != null))
					{
						value.routes1.Add(this);
						this._origin_id = value.id;
					}
					else
					{
						this._origin_id = default(int);
					}
					this.SendPropertyChanged("location1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_route", Storage="_vehicle", ThisKey="vehicle_id", OtherKey="id", IsForeignKey=true)]
		public vehicle vehicle
		{
			get
			{
				return this._vehicle.Entity;
			}
			set
			{
				vehicle previousValue = this._vehicle.Entity;
				if (((previousValue != value) 
							|| (this._vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vehicle.Entity = null;
						previousValue.routes.Remove(this);
					}
					this._vehicle.Entity = value;
					if ((value != null))
					{
						value.routes.Add(this);
						this._vehicle_id = value.id;
					}
					else
					{
						this._vehicle_id = default(int);
					}
					this.SendPropertyChanged("vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_parcel_logs(parcel_log entity)
		{
			this.SendPropertyChanging();
			entity.route = this;
		}
		
		private void detach_parcel_logs(parcel_log entity)
		{
			this.SendPropertyChanging();
			entity.route = null;
		}
		
		private void attach_parcel_routes(parcel_route entity)
		{
			this.SendPropertyChanging();
			entity.route = this;
		}
		
		private void detach_parcel_routes(parcel_route entity)
		{
			this.SendPropertyChanging();
			entity.route = null;
		}
	}
}
#pragma warning restore 1591
